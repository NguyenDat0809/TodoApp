@using Todo.Models.DTO
@{
    ViewData["Title"] = "DoIts";
    var display = "visible";

    var url = Url.Action("GetModalPartial", "Home");

    Modal modalDto = new()
            {
                Task = new()
                {
                    Description = "",
                    DueDate = DateTime.Now,
                    CategoryId = "",
                    StatusId = "open"
                },
                Categories = ViewBag.Categories,
                Statuses = ViewBag.Statuses
            };
}
@model IEnumerable<ToDo>

<div class="container">
    <div class="container-fluid">
        <form asp-action="Filter" method="post">
            <div class="d-flex justify-content-around align-items-center">
                <div class="flex-fill p-2">
                    <label class="form-label">Category</label>
                    @{
                        /*
                        asp-items will run after options of select
                        SelectList là một lớp trong ASP.NET MVC được sử dụng để đóng gói dữ liệu để hiển thị trong một danh sách thả xuống (dropdown list) trong ứng dụng MVC
                        */
                    }
                    <select name="filter" class="form-select"
                            asp-items="@(new SelectList(ViewBag.Categories, "CategoryId", "Name", ViewBag.Filters.CategoryId))">
                        <option value="all">All</option>
                    </select>
                </div>
                <div class="flex-fill p-2">
                    <label class="form-label">Due:</label>
                    <select name="filter" class="form-select"
                            asp-items="@(new SelectList(ViewBag.DueFilters, "Key", "Value", ViewBag.Filters.Due))">
                        <option value="all">All</option>
                    </select>
                </div>
                <div class="flex-fill p-2">
                    <label class="form-label">Status</label>
                    <select name="filter" class="form-select"
                            asp-items="@(new SelectList(ViewBag.Statuses, "StatusId", "Name", ViewBag.Filters.StatusId))">
                        <option value="all">All</option>
                    </select>
                </div>
                <button class="btn h-50 mt-4 mx-1 btn-color-custom">Filter</button>
                <a asp-action="Index" asp-route-id="" class="btn h-50 mt-4 mx-1 btn-color-custom">Clear</a>
            </div>
        </form>
    </div>

    <!--edit form partial location after render value-->
    <div id="place-form">
        @Html.Partial("_ModalFormPartial", modalDto)
    </div>

    <div class="container-fluid">

        <table class="table">
            <thead>
            <th>Description</th>
            <th>Category</th>
            <th>Due Date</th>
            <th>Status</th>
            <th class="w-25"></th>
            </thead>
            <tbody>
                @foreach (ToDo task in Model)
                {
                    string overdue = task.Overdue ? "bg-warning" : "";
                    <tr class="@overdue">
                        <td class="overflow-hidden" style="width:300px;">
                            @task.Description
                        </td>
                        <td>@task.Category.Name</td>
                        <td>@task.DueDate?.ToShortDateString()</td>
                        <td>@task.Status.Name</td>
                        <td>
                            <div class="d-flex align-content-center">

                                @{
                                    if (@task.StatusId == "close")

                                        display = "hidden";
                                    else
                                        display = "visible";
                                }
                                <form style="visibility:@display" class="mr-1" asp-action="MarkCompleted" method="post" asp-route-id="@ViewBag.Filters.FilterString">

                                    <button title="Complete" type="submit" class="btn btn-sm" name="selectedId" value="@task.Id">
                                        <i class="fa-solid fa-check-to-slot"></i>
                                    </button>
                                </form>



                                <button title="Edit" class="btn btn-sm"
                                        onclick="showModal('@url', '@task.Id')">
                                    <i class="fa-regular fa-pen-to-square"></i>
                                </button>


                                <form class="mr-1" asp-action="MarkCompleted" method="post" asp-route-id="@ViewBag.Filters.FilterString">
                                    <button title="Delete" class="btn btn-sm">
                                        <i class="fa-solid fa-trash"></i>
                                    </button>
                                </form>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-start align-items-center">
            <button class="btn btn-color-custom"
                    style="color:#dc4c3e;"
                    onclick="showModal('@url', @null)">
                Add new
            </button>
            <div class="p-2">
                <form asp-action="DeleteCompleted" method="post" asp-route-id="@ViewBag.Filters.FilterString">
                    <button type="submit" class="btn btn-color-custom no-wrap">Delete completed tasks</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/html-interaction.js"></script>
    <script src="~/js/script.js"></script>

}



