@using Todo.Models.DTO
@{
    ViewData["Title"] = "DoIts";
    var display = "visible";
    var url = Url.Action("AddOrEdit", "Home", null, Context.Request.Scheme);

}
@model IEnumerable<ToDo>

<div class="container">
    <div class="container-fluid">
        <form asp-action="Filter" method="post">
            <div class="d-flex justify-content-around align-items-center">
                <div class="flex-fill p-2">
                    <label class="form-label">Category</label>
                    @{
                        /*
                        asp-items will run after options of select
                        SelectList là một lớp trong ASP.NET MVC được sử dụng để đóng gói dữ liệu để hiển thị trong một danh sách thả xuống (dropdown list) trong ứng dụng MVC
                        */
                    }
                    <select name="filter" class="form-select"
                            asp-items="@(new SelectList(ViewBag.Categories, "CategoryId", "Name", ViewBag.Filters.CategoryId))">
                        <option value="all">All</option>
                    </select>
                </div>
                <div class="flex-fill p-2">
                    <label class="form-label">Due:</label>
                    <select name="filter" class="form-select"
                            asp-items="@(new SelectList(ViewBag.DueFilters, "Key", "Value", ViewBag.Filters.Due))">
                        <option value="all">All</option>
                    </select>
                </div>
                <div class="flex-fill p-2">
                    <label class="form-label">Status</label>
                    <select name="filter" class="form-select"
                            asp-items="@(new SelectList(ViewBag.Statuses, "StatusId", "Name", ViewBag.Filters.StatusId))">
                        <option value="all">All</option>
                    </select>
                </div>
                <div class="flex-fill p-2">
                    <label class="form-label">Search</label>
                    <input name="searchDes" class="form-control" />
                </div>
                <button type="submit" class="btn h-50 mt-4 mx-1 btn-color-custom"><i class="fa-solid fa-magnifying-glass"></i></button>
                <a asp-action="Index" asp-route-id="" class="btn h-50 mt-4 mx-1 btn-color-custom">
                    <i class="fa-solid fa-arrows-rotate"></i>
                </a>
            </div>
        </form>
    </div>

    <div class="container-fluid">
        <!--Task List-->
        <div id="view-all">
            @await Html.PartialAsync("ViewAll", Model)
        </div>
        <div class="d-flex justify-content-start align-items-center">
            <a class="btn btn-color-custom"
               style="color:#dc4c3e;"
               onclick="showModal('@url', 'New Task')">
                Add new
            </a>
            <div class="p-2">
                <form asp-action="DeleteCompleted" method="post" asp-route-id="@ViewBag.Filters.FilterString">
                    <button type="submit" class="btn btn-color-custom no-wrap">Delete completed tasks</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/html-interaction.js"></script>
    <script src="~/js/script.js"></script>
}



